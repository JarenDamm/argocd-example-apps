spec:
  destination:
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/argoproj/argocd-example-apps
    targetRevision: HEAD
linkerd:
  enabled: true
  rotateCerts: false
  targetRevision: "~2.11.1"
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  trustAnchor:
    # the identityTrustAnchorsPEM and key should be generated by `step` that has been base64 encoded as a string see https://linkerd.io/2.11/tasks/automatically-rotating-control-plane-tls-credentials/
    # at the time of writing, the crt and key can be generated with the following command `step certificate create root.linkerd.cluster.local ca.crt ca.key --profile root-ca --no-password --insecure`
    # then base64 encode the resulting ca.crt and ca.key files, and use that as the crt and key values here. This is only required if you
    # have set rotateCerts to true
    key: |
  values:
    proxy:
      resources:
        cpu:
          request: 10m
    identityTrustAnchorsPEM: |
    installNamespace: false
  ignoreDifferences:
    - group: batch
      jsonPointers:
        - /spec/schedule
      kind: CronJob
      name: linkerd-heartbeat
    - group: ''
      jsonPointers:
        - /data/tls.crt
        - /data/tls.key
      kind: Secret
      name: linkerd-policy-validator-k8s-tls
    - group: ''
      jsonPointers:
        - /data/tls.crt
        - /data/tls.key
      kind: Secret
      name: linkerd-proxy-injector-k8s-tls
    - group: ''
      jsonPointers:
        - /data/tls.crt
        - /data/tls.key
      kind: Secret
      name: linkerd-sp-validator-k8s-tls
    - group: admissionregistration.k8s.io
      jqPathExpressions:
        - .webhooks[]?.clientConfig.caBundle
      kind: MutatingWebhookConfiguration
      name: linkerd-proxy-injector-webhook-config
    - group: admissionregistration.k8s.io
      jqPathExpressions:
        - .webhooks[]?.clientConfig.caBundle
      kind: ValidatingWebhookConfiguration
      name: linkerd-policy-validator-webhook-config
    - group: admissionregistration.k8s.io
      jqPathExpressions:
        - .webhooks[]?.clientConfig.caBundle
      kind: ValidatingWebhookConfiguration
      name: linkerd-sp-validator-webhook-config
    - group: apps
      jqPathExpressions:
        - .spec.template.metadata.annotations."checksum/config"
      kind: Deployment
      name: linkerd-destination
    - group: apps
      jqPathExpressions:
        - .spec.template.metadata.annotations."checksum/config"
      kind: Deployment
      name: linkerd-proxy-injector
# run `linkerd check` after deployment to make sure viz is working. If checks fail, delete all the pods in the `linkerd-viz` namespace and once they're all healthy again the checks should pass